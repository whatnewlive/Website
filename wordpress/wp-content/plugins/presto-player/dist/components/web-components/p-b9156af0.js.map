{"version":3,"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isElement","nodeType","style","ownerDocument","isEmpty","length","keys","is","nullOrUndefined","object","string","nodeList","element","empty","array","value","getTag","INFINITY","baseToString","result","toString","isNumber","isBoolean","isObjectLike","isDefined","undefined","isBlank","trim","prototype","call","EXTENDED_SEARCH_UNAVAILABLE","INCORRECT_INDEX_TYPE","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","key","PATTERN_LENGTH_TOO_LARGE","max","MISSING_KEY_PROPERTY","name","INVALID_KEY_WEIGHT_VALUE","hasOwn","hasOwnProperty","KeyStore","this","_keys","_keyMap","totalWeight","forEach","obj","createKey","weight","push","id","get","keyId","toJSON","JSON","stringify","path","src","getFn","createKeyPath","createKeyId","Error","split","join","list","arr","deepGet","index","i","len","MatchOptions","includeMatches","findAllMatches","minMatchCharLength","BasicOptions","isCaseSensitive","includeScore","shouldSort","sortFn","a","b","score","idx","FuzzyOptions","location","threshold","distance","AdvancedOptions","useExtendedSearch","ignoreLocation","ignoreFieldNorm","fieldNormWeight","Config","SPACE","norm","mantissa","cache","Map","m","Math","pow","numTokens","match","has","n","parseFloat","round","set","clear","FuseIndex","isCreated","setIndexRecords","setSources","docs","records","setKeys","_keysMap","create","doc","docIndex","_addString","_addObject","add","size","removeAt","splice","getValueForItemAtKeyId","item","record","v","$","keyIndex","subRecords","stack","nestedArrIndex","pop","subRecord","k","createIndex","myIndex","map","parseIndex","data","computeScore$1","pattern","errors","currentLocation","expectedLocation","accuracy","proximity","abs","convertMaskToIndices","matchmask","indices","start","end","MAX_BITS","search","text","patternAlphabet","patternLen","textLen","min","currentThreshold","bestLocation","computeMatches","matchMask","indexOf","lastBitArr","finalScore","binMax","mask","binMin","binMid","floor","finish","bitArr","j","charMatch","charAt","isMatch","createPatternAlphabet","char","BitapSearch","options","toLowerCase","chunks","addChunk","startIndex","alphabet","remainder","substr","searchIn","allIndices","totalScore","hasMatches","BaseMatch","isMultiMatch","getMatch","multiRegex","isSingleMatch","singleRegex","exp","matches","ExactMatch","super","type","InverseExactMatch","PrefixExactMatch","startsWith","InversePrefixExactMatch","SuffixExactMatch","endsWith","InverseSuffixExactMatch","FuzzyMatch","_bitapSearch","IncludeMatch","searchers","searchersLen","SPACE_RE","OR_TOKEN","parseQuery","query","filter","results","queryItem","found","searcher","token","MultiMatchSet","Set","ExtendedSearch","condition","_","numMatches","qLen","pLen","registeredSearchers","register","args","createSearcher","searcherClass","LogicalOperator","AND","OR","KeyType","PATH","PATTERN","isExpression","isPath","isLeaf","convertToExplicit","parse","auto","next","isQueryPath","node","children","operator","computeScore","Number","EPSILON","transformMatches","refIndex","transformScore","format","transformers","transformer","Fuse","_keyStore","setCollection","_docs","_myIndex","remove","predicate","getIndex","limit","_searchStringList","_searchObjectList","_searchLogical","sort","slice","expression","evaluate","_findMatches","res","child","resultMap","expResults","version","config","isHLS","url","includes","getParents","elem","parents","parentNode","nodeName","setAttributes","attributes","entries","setAttribute","createElement","document","innerText","vttToJson","track","ret","reduce","acc","prop","cues","cue","startTime","endTime","fuzzySearch","searchKeyword","preset","assign","fuseObject","searchInJson","searchString","searchResult","time","ceil","label","searchVtt","player","_a","media","textTracks","_c","_b","_d","captions","currentTrack","getCues","jsonTrack","removeOldMarkers","elements","progress","oldMarkers","querySelectorAll","setMarkers","points","containerFragment","createDocumentFragment","pointsFragment","point","markerElement","class","left","duration","addEventListener","currentTime","appendChild","markers","tip","cacheCues","enabled","_f","_e","toggleCaptions","interval","setInterval","generatedCues","setCues","clearInterval","locallyStoredCues","localStorage","getItem","setItem"],"sources":["src/components/core/player/functions/is.ts","../../node_modules/fuse.js/dist/fuse.esm.js","src/components/core/player/functions/util.ts","src/components/core/player/functions/search-vtt.ts","src/components/core/player/functions/cache-cues.ts"],"sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\nconst isObject = input => getConstructor(input) === Object;\nconst isString = input => getConstructor(input) === String;\nconst isArray = input => Array.isArray(input);\nconst isNodeList = input => instanceOf(input, NodeList);\nconst isElement = input => input !== null && typeof input === 'object' && input.nodeType === 1 && typeof input.style === 'object' && typeof input.ownerDocument === 'object';\nconst isEmpty = input => isNullOrUndefined(input) || ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) || (isObject(input) && !Object.keys(input).length);\n\nexport default {\n  nullOrUndefined: isNullOrUndefined,\n  object: isObject,\n  string: isString,\n  nodeList: isNodeList,\n  element: isElement,\n  empty: isEmpty,\n  array: isArray,\n};\n","/**\n * Fuse.js v6.6.2 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2022 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n  let getFn = null;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n    getFn = key.getFn;\n  }\n\n  return { path, id, weight, src, getFn }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false,\n  // The weight to determine how much field length norm effects scoring.\n  fieldNormWeight: 1\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(weight = 1, mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      // Default function is 1/sqrt(x), weight makes that variable\n      const norm = 1 / Math.pow(numTokens, 0.5 * weight);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({\n    getFn = Config.getFn,\n    fieldNormWeight = Config.fieldNormWeight\n  } = {}) {\n    this.norm = norm(fieldNormWeight, 3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          } else ;\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (isString(value) && !isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(\n  keys,\n  docs,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(\n  data,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore$1(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore$1(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore$1(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore$1(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore$1(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn,\n        fieldNormWeight: this.options.fieldNormWeight\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      const res = [];\n      for (let i = 0, len = node.children.length; i < len; i += 1) {\n        const child = node.children[i];\n        const result = evaluate(child, item, idx);\n        if (result.length) {\n          res.push(...result);\n        } else if (node.operator === LogicalOperator.AND) {\n          return []\n        }\n      }\n      return res\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '6.6.2';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport { Fuse as default };\n","import is from './is';\n\nexport function getYoutubeId(url) {\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = (url || '').match(regExp);\n  return match && match?.[2]?.length === 11 ? match[2] : null;\n}\n\nexport function getVimeoId(url) {\n  const regExp = /^.*(vimeo\\.com\\/)((channels\\/[A-z]+\\/)|(groups\\/[A-z]+\\/videos\\/))?([0-9]+)/;\n  const parseUrl = regExp.exec(url || '');\n  return parseUrl?.[5] || '';\n}\n\nexport function determineVideoUrlType(url) {\n  const youtube_id = getVimeoId(url);\n  if (youtube_id) {\n    return {\n      video_id: youtube_id,\n      type: 'vimeo',\n    };\n  }\n\n  const vimeo_id = getYoutubeId(url);\n  if (vimeo_id) {\n    return {\n      video_id: vimeo_id,\n      type: 'youtube',\n    };\n  }\n\n  return {\n    $video_id: 0,\n    $type: 'none',\n  };\n}\n\n// is the source hls?\nexport function isHLS(url) {\n  return typeof url === 'string' && url.includes('.m3u8');\n}\n\nexport function isNotEmptyObject(item: any) {\n  return typeof item === 'object' && Object.keys(item).length;\n}\nexport function isNotEmptyArray(item: any) {\n  return Array.isArray(item) && item.length > 0;\n}\nexport function timePassed({ current, duration, showAfter }: { current: number; duration: number; showAfter: number }) {\n  if (current === showAfter) {\n    return true;\n  }\n\n  let percent = (current / duration) * 100;\n  if (99.9 < percent) {\n    percent = 100;\n  }\n  return percent >= showAfter;\n}\n\nexport function getParents(elem) {\n  var parents = [];\n  while (elem.parentNode && elem.parentNode.nodeName.toLowerCase() != 'body') {\n    elem = elem.parentNode;\n    parents.push(elem);\n  }\n  return parents;\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n  if (!is.element(element) || is.empty(attributes)) {\n    return;\n  }\n\n  // Assume null and undefined attributes should be left out,\n  // Setting them would otherwise convert them to \"null\" and \"undefined\"\n  Object.entries(attributes)\n    .filter(([, value]) => !is.nullOrUndefined(value))\n    .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n  // Create a new <element>\n  const element = document.createElement(type);\n\n  // Set all passed attributes\n  if (is.object(attributes)) {\n    setAttributes(element, attributes);\n  }\n\n  // Add text node\n  if (is.string(text)) {\n    element.innerText = text;\n  }\n\n  // Return built element\n  return element;\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n  if (is.nodeList(element)) {\n    return Array.from(element).map(e => toggleClass(e, className, force));\n  }\n\n  if (is.element(element)) {\n    let method = 'toggle';\n    if (typeof force !== 'undefined') {\n      method = force ? 'add' : 'remove';\n    }\n\n    element.classList[method](className);\n    return element.classList.contains(className);\n  }\n\n  return false;\n}\n","import Fuse from 'fuse.js';\nimport { createElement } from './util';\nimport { getCues } from './cache-cues';\nimport is from './is';\n\n/**\n *\n * @param {TextTrack} track\n * @returns Cues fron the track\n */\nexport const vttToJson = track => {\n  if (!track) return null;\n\n  const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(\n    (acc, prop) => {\n      if (track[prop]) {\n        acc[prop] = track[prop];\n      }\n      return acc;\n    },\n    {\n      cues:\n        track.cues &&\n        Array.prototype.map.call(track.cues, function (cue) {\n          return {\n            startTime: cue.startTime,\n            endTime: cue.endTime,\n            text: cue.text,\n            id: cue.id,\n          };\n        }),\n    },\n  );\n\n  return ret;\n};\n\n/**\n *\n * @param {String} searchKeyword\n * @param {JSON} list\n * @returns Object of search results\n */\nconst fuzzySearch = (searchKeyword, list, preset) => {\n  if (is.empty(list)) return [];\n  if (is.empty(preset)) return [];\n  if (!is.string(searchKeyword)) return [];\n\n  /**\n   * Default settings for the Fusejs library.\n   * Reference - https://fusejs.io/api/options.html\n   *\n   * isCaseSensitive: false\n   * includeScore: true\n   * shouldSort: true\n   * includeMatches: true\n   * findAllMatches: false\n   * minMatchCharLength: 1\n   * location: 0\n   * threshold: 0.3\n   * distance: 100\n   * useExtendedSearch: false\n   * ignoreLocation: false\n   * ignoreFieldNorm: false\n   * fieldNormWeight: 1\n   *\n   */\n  const options = {\n    ...preset?.minMatchCharLength,\n    ...preset?.threshold,\n    shouldSort: false,\n    includeMatches: true,\n    threshold: 0.3,\n    keys: ['text'],\n  };\n\n  if (null === list || !list || 0 === list.length) {\n    return [];\n  }\n\n  const fuseObject = new Fuse(list, options);\n  return fuseObject.search(searchKeyword);\n};\n\n/**\n *\n * @param {String} searchString\n * @param {JSON} list\n * @returns Array of time in seconds where the search string is found.\n */\nconst searchInJson = (searchString, list, preset) => {\n  if (!is.string(searchString)) return [];\n  if (is.empty(list)) return [];\n  if (is.empty(preset)) return [];\n\n  const searchResult = fuzzySearch(searchString, list, preset);\n\n  return (\n    searchResult &&\n    Array.prototype.map.call(searchResult, function (result) {\n      return {\n        time: Math.ceil(result.item.startTime),\n        label: ''\n      };\n    })\n  );\n};\n\n/**\n *\n * @param {any} player\n * @param {string} searchString\n * @returns Array of time in seconds where the search string is found.\n */\nexport function searchVtt(player, searchString) {\n  if (!player) return;\n  if (!player?.media?.textTracks || player?.media?.textTracks?.length === 0) return;\n\n  const track = player.media.textTracks;\n  const preset = player.config.preset?.search || '';\n\n  let cues = '';\n  if (player.captions.currentTrack === -1) {\n    // When no track is selected, grab the cues from cache localstorage.\n    cues = getCues(player);\n  } else {\n    cues = track[player.captions.currentTrack];\n  }\n\n  if (is.empty(cues)) return [];\n\n  const jsonTrack = vttToJson(cues);\n\n  if (is.empty(jsonTrack)) return [];\n\n  return searchInJson(searchString, jsonTrack?.cues, preset);\n}\n\nexport function removeOldMarkers(player) {\n  if (!player) return;\n  if (!player?.elements || !player?.elements?.progress) return;\n\n  // Remove old markers.\n  let oldMarkers = player.elements.progress.querySelectorAll('.plyr__progress__marker');\n  if (is.empty(oldMarkers)) return;\n  for (var i = 0; i < oldMarkers.length; i++) {\n    oldMarkers[i].remove();\n  }\n}\n\nexport function setMarkers(player, points) {\n  if (!player) return;\n\n  removeOldMarkers(player);\n\n  if (!points?.length) return;\n\n  const containerFragment = document.createDocumentFragment();\n  const pointsFragment = document.createDocumentFragment();\n\n  // Inject markers to progress container\n  points.forEach(point => {\n    const markerElement = createElement(\n      'span',\n      {\n        class: 'plyr__progress__marker',\n      },\n      '',\n    );\n\n    const left = `${(point.time / player.duration) * 100}%`;\n\n    markerElement.addEventListener('click', () => {\n      player.currentTime = point.time;\n    });\n\n    markerElement.style.left = left;\n    pointsFragment.appendChild(markerElement);\n  });\n\n  containerFragment.appendChild(pointsFragment);\n\n  player.elements.markers = {\n    points: pointsFragment,\n    tip: null,\n  };\n\n  player.elements.progress.appendChild(containerFragment);\n}\n","import is from './is';\nimport { vttToJson } from './search-vtt';\nexport default function cacheCues(player) {\n  // Bail is search is not enabled.\n  if (!player?.config.preset?.search?.enabled) return;\n  // Bail if no language tracks are added.\n  if (!player?.media?.textTracks?.length || player?.media?.textTracks?.length === 0) return;\n  // Bail if already a track is selected by the user.\n  if (player?.currentTrack !== -1) return;\n\n  // Cache the default 1st available track.\n  player.toggleCaptions(true);\n\n  let interval = setInterval(() => {\n    const generatedCues = player.media.textTracks[0]?.cues;\n\n    if (generatedCues?.length > 0) {\n      // Cache it into localstorage.\n      setCues(player);\n      // Reset to original track.\n      player.toggleCaptions(false);\n\n      clearInterval(interval);\n    }\n  }, 200);\n}\n\nexport function getCues(player) {\n  if (!player) return;\n  const locallyStoredCues = localStorage.getItem('presto-player-' + player.id + '-cues');\n\n  if (is.empty(locallyStoredCues)) return '';\n\n  return JSON.parse(locallyStoredCues);\n}\n\nexport function setCues(player) {\n  if (\n    !player ||\n    !player?.media?.textTracks ||\n    player?.media?.textTracks?.length === 0\n  ) return;\n  \n  const cues = (player?.media?.textTracks?.[0]) ? vttToJson(player.media.textTracks[0]) : {};\n  if ( !is.empty(cues) ) {\n    localStorage.setItem('presto-player-' + player.id + '-cues', JSON.stringify(cues));\n  }\n  \n}\n"],"mappings":"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"}